name: CI & Deployment

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend:
    name: Backend Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      # - name: Install Render CLI
      #   run: npm install -g @render/cli

      # - name: Deploy Backend to Render
      #   run: render deploy service --service-id ${{ secrets.RENDER_SERVICE_ID }} --api-key ${{ secrets.RENDER_API_KEY_PRODUCTION }}

  frontend:
    name: Frontend Build & Deploy
    runs-on: ubuntu-latest
    needs: backend
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

      - name: Run test
        run: npm run test

      - name: Build Project
        run: npm run build

      - name: Install vercel cli
        run: npm i -g vercel

      - name: Deploy Frontend to Vercel
        run: vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes
